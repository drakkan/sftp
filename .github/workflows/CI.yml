name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  run-tests:
    name: Run test cases
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: [1.15, 1.14]
        exclude:
          - os: macos-latest
            go: 1.14

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Run tests
        run: |
          make integration
          make integration_w_race

  run-tests-other-archs:
    name: Run test cases on other archs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: stretch
            go-arch: arm64
          - arch: ppc64le
            distro: stretch
            go-arch: ppc64le
          - arch: armv7
            distro: stretch
            go-arch: armv6l
    steps:
      - uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.0.8
        name: Run tests
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          # seccomp=unconfined is required to run race detector on ppc64le
          #dockerRunArgs: |
          #  --security-opt seccomp=unconfined
          shell: /bin/bash

          install: |
            apt-get update -q -y
            apt-get install -q -y curl gcc make openssh-sftp-server
            GO_VERSION=$(curl https://golang.org/VERSION?m=text)
            curl --verbose -o go.tar.gz -L https://golang.org/dl/${GO_VERSION}.linux-${{ matrix.go-arch }}.tar.gz
            tar -C /usr/local -xzf go.tar.gz

          run: |
            export PATH=$PATH:/usr/local/go/bin
            make integration
            # disable race detector for now
            #if [ "${{ matrix.go-arch }}" != "arm64" ]; then
            #  # race detector is not supported on arm64
            #  make integration_w_race
            #fi
